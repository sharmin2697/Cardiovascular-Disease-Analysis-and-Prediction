femaleweightm<-median(female$weight)
cd$weight<-ifelse(cd$gender==1 & cd$weight<45,femaleweightm, ifelse(cd$gender==1 & cd$weight>120,femaleweightm,ifelse(cd$gender==2 & cd$weight<55,maleweightm,ifelse(cd$gender==2 & cd$weight>120,maleweightm,cd$weight))))
# Calculating BMI using weight and height. Potential predictor
cd$bmi<- cd$weight/(cd$height*cd$height)*10000 # Weight in kgs and height in cms
#cd$bmi
# Check for Null Values
sum(is.na(cd))
#The abnormally low values in the case of systolic and and diastolic are converted to NA. As they are very low in number (32) and contribute to only 0.04% of the data, they can be dropped.
cd<-na.omit(cd)
# dropping id column
cd$id<- NULL
# Converting data types
#Gender
cd$gender<-as.factor(cd$gender)
#Cholestrol
cd$cholesterol<-as.factor(cd$cholesterol)
#Glucose
cd$gluc<-as.factor(cd$gluc)
#Smoke
cd$smoke<- as.factor(cd$smoke)
#Alcohol
cd$alco<- as.factor(cd$alco)
#Active
cd$active<- as.factor(cd$active)
#Cardio
cd$cardio<- as.factor(cd$cardio)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\test.csv", row.names = TRUE)
summary(cd)
require(caTools) #install caTools
set.seed(123)
sample = sample.split(cd,SplitRatio = 0.70)
train_cd =subset(cd,sample ==TRUE)
test_cd =subset(cd, sample==FALSE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\train_cd.csv", row.names = TRUE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\test_cd.csv", row.names = TRUE)
# Relationship with the target variable
#Statistical Significance between Height & Cardio Vascular Disease risk
ttestresage = t.test(train_cd$age~train_cd$cardio)
ttestresage
#Strong Predictor
#Statistical Significance between Height & Cardio Vascular Disease risk
ttestresheight = t.test(train_cd$height~train_cd$cardio)
ttestresheight
#Comparitively weak predictor
#Statistical Significance between Weight & Cardio Vascular Disease risk
ttestresweight = t.test(train_cd$weight~train_cd$cardio)
ttestresweight
#Strong predictor
#Statistical Significance between BMI & Cardio Vascular Disease risk
ttestresbmi = t.test(train_cd$bmi~train_cd$cardio)
ttestresbmi
#Strong predictor
#Statistical Significance between Systolic & Cardio Vascular Disease
ttestressys = t.test(train_cd$ap_hi~train_cd$cardio)
ttestressys
#Strong Predictor
#Statistical Significance between Diastolic & Cardio Vascular Disease
ttestresdia = t.test(train_cd$ap_lo~train_cd$cardio)
ttestresdia
#Strong Predictor
#Statistical Significance between Cholestrol & Cardio Vascular Disease
chisqreschol = chisq.test(train_cd$cholesterol,train_cd$cardio)
chisqreschol
#Strong Predictor
#Statistical Significance between Cholestrol & Cardio Vascular Disease
chisqressmoke = chisq.test(train_cd$smoke,train_cd$cardio)
chisqressmoke
#Strong Predictor
#Statistical Significance between Glucose & Cardio Vascular Disease
chisqresgluc = chisq.test(train_cd$gluc,train_cd$cardio)
chisqresgluc
#Strong Predictor
#Statistical Significance between Glucose & Cardio Vascular Disease
chisqresalco = chisq.test(train_cd$alco,train_cd$cardio)
chisqresalco
#Not statistically significant but missing by a small margin, therefore it is optional to consider it as a predictor
#Statistical Significance between Physical Activity & Cardio Vascular Disease risk
chisqresact = chisq.test(train_cd$active,train_cd$cardio)
chisqresact
library(randomForest)
set.seed(101)
rf_cd <- randomForest(cardio~., data=train_cd)
rf_cd
attributes(rf)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(pastecs)
library(psych)
library(Hmisc)
cd = read.csv("D:\\Data Science\\Cardio Vascular\\Cardio-Vascular\\cardio.csv")
dim(cd)
cd$age<- (cd$age/365)
cd$age<- round(cd$age)
#Structure
str(cd)
#Summary
summary(cd)
# Anomalies found in height, weight, systolic (ap_hi) and diastolic (ap_lo)
#Gender,cholestrol,gluc,smoke,alco,active,cardio are needed to be converted into categorical variable
fivenum(cd$age)
psych::describe(cd$age)
hist(cd$age,
main = "Histogram of Age",
xlab = "Age in Years")
boxplot(cd$age,
main = toupper("Boxplot of Age"),
ylab = "Age in years"
)
outlier_values <- boxplot.stats(cd$age)$out  # outlier values.
boxplot(cd$age, main="Age", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
qnt <- quantile(cd$age, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$age, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$age, na.rm = T)
cd$age[cd$age < (qnt[1] - H)] <- caps[1]
cd$age[cd$age > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$age)$out  # outlier values.
boxplot(cd$age, main="Age", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
psych::describe(cd$gender)
fivenum(cd$gender)
describe(cd$gender)
stat.desc(cd$gender)
fivenum(cd$height)
psych::describe(cd$height)
stat.desc(cd$height)
hist(cd$height,
main = "Histogram of Height",
xlab = "Height in centimeter")
outlier_values <- boxplot.stats(cd$cd$height)$out  # outlier values.
boxplot(cd$height, main="Height", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
outliersper <- function(x){
length(which(x >  mean(x) + 3 * sd(x) | x < mean(x) - 3 * sd(x))  ) / length(x)
}
print(outliersper(cd$height))
qnt <- quantile(cd$height, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$height, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$height, na.rm = T)
cd$height[cd$height < (qnt[1] - H)] <- caps[1]
cd$height[cd$height > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$height)$out  # outlier values.
boxplot(cd$height, main="Height", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
fivenum(cd$weight)
psych::describe(cd$weight)
stat.desc(cd$weight)
hist(cd$weight,
main = "Histogram of Weight",
xlab = "Weight in kg")
outlier_values <- boxplot.stats(cd$weight)$out  # outlier values.
boxplot(cd$weight, main="Weight", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
outliersper <- function(x){
length(which(x >  mean(x) + 3 * sd(x) | x < mean(x) - 3 * sd(x))  ) / length(x)
}
print(outliersper(cd$weight))
qnt <- quantile(cd$weight, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$weight, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$weight, na.rm = T)
cd$weight[cd$weight < (qnt[1] - H)] <- caps[1]
cd$weight[cd$weight > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$height)$out  # outlier values.
boxplot(cd$height, main="Height", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
psych::describe(cd$weight)
fivenum(cd$ap_hi)
psych::describe(cd$ap_hi)
stat.desc(cd$ap_hi)
hist(cd$ap_hi,
main = "Histogram of systolic Blood Pressure",
xlab = "Ap_hi")
outlier_values <- boxplot.stats(cd$ap_hi)$out  # outlier values.
boxplot(cd$ap_hi, main="systolic Blood Pressure", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
outliersper <- function(x){
length(which(x >  mean(x) + 3 * sd(x) | x < mean(x) - 3 * sd(x))  ) / length(x)
}
print(outliersper(cd$ap_hi))
qnt <- quantile(cd$ap_hi, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$ap_hi, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$ap_hi, na.rm = T)
cd$ap_hi[cd$ap_hi < (qnt[1] - H)] <- caps[1]
cd$ap_hi[cd$ap_hi > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$ap_hi)$out  # outlier values.
boxplot(cd$ap_hi, main="systolic Blood Pressure", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
psych::describe(cd$ap_hi)
fivenum(cd$ap_lo)
psych::describe(cd$ap_lo)
stat.desc(cd$ap_lo)
hist(cd$ap_lo,
main = "Histogram of Diastolic Blood Pressure",
xlab = "Diastolic")
outlier_values <- boxplot.stats(cd$ap_lo)$out  # outlier values.
boxplot(cd$ap_lo, main="Diastolic Blood Pressure", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
outliersper <- function(x){
length(which(x >  mean(x) + 3 * sd(x) | x < mean(x) - 3 * sd(x))  ) / length(x)
}
print(outliersper(cd$ap_lo))
qnt <- quantile(cd$ap_lo, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$ap_lo, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$ap_lo, na.rm = T)
cd$ap_lo[cd$ap_lo < (qnt[1] - H)] <- caps[1]
cd$ap_lo[cd$ap_lo > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$ap_lo)$out  # outlier values.
boxplot(cd$ap_lo, main="Diastolic Blood Pressure", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
psych::describe(cd$ap_lo)
psych::describe(cd$cholesterol)
fivenum(cd$cholesterol)
describe(cd$cholesterol)
stat.desc(cd$cholesterol)
cd$cholesterol<-as.factor(cd$cholesterol)
psych::describe(cd$gluc)
fivenum(cd$gluc)
describe(cd$gluc)
stat.desc(cd$gluc)
cd$gluc<-as.factor(cd$gluc)
psych::describe(cd$smoke)
fivenum(cd$smoke)
describe(cd$smoke)
stat.desc(cd$smoke)
cd$smoke<-as.factor(cd$smoke)
psych::describe(cd$alco)
fivenum(cd$alco)
describe(cd$alco)
stat.desc(cd$alco)
cd$alco<-as.factor(cd$alco)
psych::describe(cd$active)
fivenum(cd$active)
describe(cd$active)
stat.desc(cd$active)
cd$active<-as.factor(cd$active)
psych::describe(cd$cardio)
fivenum(cd$cardio)
describe(cd$cardio)
stat.desc(cd$cardio)
cd$cardio<-as.factor(cd$cardio)
summary(cd)
temp_min = pmin(cd$ap_hi, cd$ap_lo)
cd$ap_hi = pmax(cd$ap_hi, cd$ap_lo)
cd$ap_lo = temp_min
sum(is.na(cd$age))
sum(is.na(cd$height))
sum(is.na(cd$weight))
sum(is.na(cd$ap_hi))
sum(is.na(cd$ap_lo))
require(caTools) #install caTools
set.seed(123)
sample = sample.split(cd,SplitRatio = 0.70)
train_cd =subset(cd,sample ==TRUE)
test_cd =subset(cd, sample==FALSE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\train_cd.csv", row.names = TRUE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\test_cd.csv", row.names = TRUE)
cd$bmi <- cd$weight/(cd$height*cd$height)*10000  # Weight in kgs and height in cms
require(caTools) #install caTools
set.seed(123)
sample = sample.split(cd,SplitRatio = 0.70)
train_cd =subset(cd,sample ==TRUE)
test_cd =subset(cd, sample==FALSE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\train_cd.csv", row.names = TRUE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\test_cd.csv", row.names = TRUE)
require(caTools) #install caTools
set.seed(123)
sample = sample.split(cd,SplitRatio = 0.70)
train_cd =subset(cd,sample ==TRUE)
test_cd =subset(cd, sample==FALSE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\train_cd.csv", row.names = TRUE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\test_cd.csv", row.names = TRUE)
library(randomForest)
library(caret)
rf_cd <- randomForest(cardio~., data=train_cd,
importance = TRUE,
proximity = TRUE)
library(randomForest)
library(caret)
rf_cd <- randomForest(cardio~., data=train_cd[1:40000],
importance = TRUE,
proximity = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
cd = read.csv("D:\\Data Science\\Cardio Vascular\\Cardio-Vascular\\cardio.csv")
dim(cd)
cd$age<- (cd$age/365)
cd$age<- round(cd$age)
#Structure
str(cd)
#Summary
summary(cd)
# Anomalies found in height, weight, systolic (ap_hi) and diastolic (ap_lo)
#Gender,cholestrol,gluc,smoke,alco,active,cardio are needed to be converted into categorical variable
library(pastecs)
library(psych)
library(Hmisc)
fivenum(cd$age)
psych::describe(cd$age)
hist(cd$age,
main = "Histogram of Age",
xlab = "Age in Years")
boxplot(cd$age,
main = toupper("Boxplot of Age"),
ylab = "Age in years"
)
outlier_values <- boxplot.stats(cd$age)$out  # outlier values.
boxplot(cd$age, main="Age", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
qnt <- quantile(cd$age, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$age, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$age, na.rm = T)
caps[1] <- cd$age[cd$age < (qnt[1] - H)]
cd$age[cd$age > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$age)$out  # outlier values.
boxplot(cd$age, main="Age", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
qnt <- quantile(cd$age, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$age, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$age, na.rm = T)
caps[1] <- cd$age[cd$age < (qnt[1] - H)]
cd$age[cd$age > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$age)$out  # outlier values.
boxplot(cd$age, main="Age", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
qnt <- quantile(cd$age, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$age, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$age, na.rm = T)
caps[1] <- cd$age[cd$age < (qnt[1] - H)]
cd$age[cd$age > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$age)$out  # outlier values.
boxplot(cd$age, main="Age", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
cd[cd$gender==1,]$gender<-"F"
cd[cd$gender==2,]$gender<-"M"
cd$gender<-as.factor(cd$gender)
table(factor(cd$gender))
fivenum(cd$height)
psych::describe(cd$height)
stat.desc(cd$height)
hist(cd$height,
main = "Histogram of Height",
xlab = "Height in centimeter")
outlier_values <- boxplot.stats(cd$cd$height)$out  # outlier values.
boxplot(cd$height, main="Height", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
outliersper <- function(x){
length(which(x >  mean(x) + 3 * sd(x) | x < mean(x) - 3 * sd(x))  ) / length(x)
}
print(outliersper(cd$height))
qnt <- quantile(cd$height, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$height, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$height, na.rm = T)
cd$height[cd$height < (qnt[1] - H)] <- caps[1]
cd$height[cd$height > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$height)$out  # outlier values.
boxplot(cd$height, main="Height", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
fivenum(cd$weight)
psych::describe(cd$weight)
stat.desc(cd$weight)
hist(cd$weight,
main = "Histogram of Weight",
xlab = "Weight in kg")
outlier_values <- boxplot.stats(cd$weight)$out  # outlier values.
boxplot(cd$weight, main="Weight", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
outliersper <- function(x){
length(which(x >  mean(x) + 3 * sd(x) | x < mean(x) - 3 * sd(x))  ) / length(x)
}
print(outliersper(cd$weight))
qnt <- quantile(cd$weight, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$weight, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$weight, na.rm = T)
cd$weight[cd$weight < (qnt[1] - H)] <- caps[1]
cd$weight[cd$weight > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$height)$out  # outlier values.
boxplot(cd$height, main="Height", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
psych::describe(cd$weight)
fivenum(cd$ap_hi)
psych::describe(cd$ap_hi)
stat.desc(cd$ap_hi)
hist(cd$ap_hi,
main = "Histogram of systolic Blood Pressure",
xlab = "Ap_hi")
outlier_values <- boxplot.stats(cd$ap_hi)$out  # outlier values.
boxplot(cd$ap_hi, main="systolic Blood Pressure", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
outliersper <- function(x){
length(which(x >  mean(x) + 3 * sd(x) | x < mean(x) - 3 * sd(x))  ) / length(x)
}
print(outliersper(cd$ap_hi))
qnt <- quantile(cd$ap_hi, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$ap_hi, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$ap_hi, na.rm = T)
cd$ap_hi[cd$ap_hi < (qnt[1] - H)] <- caps[1]
cd$ap_hi[cd$ap_hi > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$ap_hi)$out  # outlier values.
boxplot(cd$ap_hi, main="systolic Blood Pressure", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
psych::describe(cd$ap_hi)
fivenum(cd$ap_lo)
psych::describe(cd$ap_lo)
stat.desc(cd$ap_lo)
hist(cd$ap_lo,
main = "Histogram of Diastolic Blood Pressure",
xlab = "Ap_low")
outlier_values <- boxplot.stats(cd$ap_lo)$out  # outlier values.
boxplot(cd$ap_lo, main="Diastolic Blood Pressure", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
outliersper <- function(x){
length(which(x >  mean(x) + 3 * sd(x) | x < mean(x) - 3 * sd(x))  ) / length(x)
}
print(outliersper(cd$ap_lo))
qnt <- quantile(cd$ap_lo, probs=c(.25, .75), na.rm = T)
caps <- quantile(cd$ap_lo, probs=c(.05, .95), na.rm = T)
H <- 1.5 * IQR(cd$ap_lo, na.rm = T)
cd$ap_lo[cd$ap_lo < (qnt[1] - H)] <- caps[1]
cd$ap_lo[cd$ap_lo > (qnt[2] + H)] <- caps[2]
outlier_values <- boxplot.stats(cd$ap_lo)$out  # outlier values.
boxplot(cd$ap_lo, main="Diastolic Blood Pressure", boxwex=0.1)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
psych::describe(cd$ap_lo)
cd$cholesterol<-as.factor(cd$cholesterol)
table(factor(cd$cholesterol))
cd$gluc<-as.factor(cd$gluc)
table(factor(cd$gender))
cd$alco<-as.factor(cd$alco)
table(factor(cd$alco))
cd[cd$cardio==0,]$cardio<-"Negative"
cd[cd$cardio==1,]$cardio<-"Positive"
cd$cardio<-as.factor(cd$cardio)
table(factor(cd$cardio))
temp_min = pmin(cd$ap_hi, cd$ap_lo)
cd$ap_hi = pmax(cd$ap_hi, cd$ap_lo)
cd$ap_lo = temp_min
cd$bmi<- cd$weight/(cd$height*cd$height)*10000 # Weight in kgs and height in cms
cd$id<- NULL
require(caTools) #install caTools
set.seed(123)
sample = sample.split(cd,SplitRatio = 0.70)
train_cd =subset(cd,sample ==TRUE)
test_cd =subset(cd, sample==FALSE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\train_cd.csv", row.names = TRUE)
#write.csv(cd,"D:\\Data Science\\Cardio Vascular\\test_cd.csv", row.names = TRUE)
# Relationship with the target variable
ttestresage = t.test(train_cd$age~train_cd$cardio)
ttestresage
library(GPArotation)
l1 <- data.frame(cd$age ,cd$height,cd$weight , cd$ap_hi,cd$ap_lo , cd$bmi)
corrm<- cor(l1)
scree(corrm, factors=TRUE, pc=TRUE, main="scree plot", hline=NULL, add=FALSE) ### SCREE PLOT
eigen(corrm)$values                                                     ### EIGEN VALUES
library(plyr)
eigen_values <- mutate(data.frame(eigen(corrm)$values)
,cum_sum_eigen=cumsum(eigen.corrm..values)
, pct_var=eigen.corrm..values/sum(eigen.corrm..values)
, cum_pct_var=cum_sum_eigen/sum(eigen.corrm..values))
library(psych)
FA<-fa(r=corrm, 3, rotate="varimax", SMC=FALSE, fm="minres")
print(FA)
FA_SORT<-fa.sort(FA)
ls(FA_SORT)
FA_SORT$loadings
library(randomForest)
set.seed(123)
rf_cd <- randomForest(cardio~.-weight-height, data=train_cd,
ntree = 1000,
mtry = 2,
importance = TRUE)
print(rf_cd)
attributes(rf_cd)
oob.rf_cd <- vector(length=10)
for(i in 1:10) {
temp.model <- randomForest(cardio ~ .-weight-height, data=train_cd, mtry=i, ntree=1000)
oob.rf_cd[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.rf_cd
ggplot(data=oob.rf_cd, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))
install.packages(c("rattle", "rpart.plot"))
cd$bmi[lapply(cd$bmi, ">", 25) == 0]
library(caret)
p1 <- predict(rf_cd, train_cd)
confusionMatrix(p1, train_cd$cardio)
oob.error.data <- data.frame(
Trees=rep(1:nrow(rf_cd$err.rate), times=3),
Type=rep(c("OOB", "Negative", "Positive"), each=nrow(rf_cd$err.rate)),
Error=c(rf_cd$err.rate[,"OOB"],
model$err.rate[,"Negative"],
model$err.rate[,"Positive"]))
oob.error.data <- data.frame(
Trees=rep(1:nrow(rf_cd$err.rate), times=3),
Type=rep(c("OOB", "Negative", "Positive"), each=nrow(rf_cd$err.rate)),
Error=c(rf_cd$err.rate[,"OOB"],
rf_cd$err.rate[,"Negative"],
rf_cd$err.rate[,"Positive"]))
ggplot(data=oob.error.data, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))
library(randomForest)
set.seed(123)
rf_cd <- randomForest(cardio~.-weight-height, data=train_cd,
ntree = 500,
mtry = 2,
importance = TRUE)
print(rf_cd)
attributes(rf_cd)
oob.rf_cd <- vector(length=10)
for(i in 1:10) {
temp.model <- randomForest(cardio ~ .-weight-height, data=train_cd, mtry=i, ntree=500)
oob.rf_cd[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
